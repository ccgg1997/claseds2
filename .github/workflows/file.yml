name: file

on: 
  push:
    branches:
      '*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Validate file creation
        run: |
          python ./example.py
          if [ -f "file.txt" ]; then
            echo "file.txt exists"
          else
            echo "file.txt does not exist"
            exit 1
          fi

      - name: Create Pull Request and Assign Reviewers
        if: github.event_name == 'push'  # Asegurarse de que solo se ejecute en caso de un push
        run: |
          PR_BRANCH="auto-pr-$(date +%s)"  # Generar un nombre Ãºnico para la nueva rama del PR
          PR_URL=$(curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"title\":\"Automatic Reviewers\",\"body\":\"This PR has been automatically assigned reviewers.\",\"head\":\"$PR_BRANCH\",\"base\":\"main\"}" "https://api.github.com/repos/${{ github.repository }}/pulls" | jq -r '.url')

          # Obtener los revisores aleatorios
          REVIEWERS=$(curl -s "https://api.github.com/repos/${{ github.repository }}/collaborators" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" | jq -r '.[].login' | shuf | head -n 2)

          # Asignar los revisores al PR
          for reviewer in $REVIEWERS; do
            curl -X POST -d "{\"reviewers\": [\"$reviewer\"]}" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "$PR_URL/requested_reviewers"
          done